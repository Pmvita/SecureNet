
# SecureNet Environment Configuration

# API Authentication
API_KEY=your-secure-api-key-here  # Generate a secure random key
SECRET_KEY=your-secret-key-here   # Generate a secure random key

# Server Configuration
HOST=0.0.0.0
PORT=8000
DEBUG=False
ALLOWED_ORIGINS=http://localhost:8000,http://127.0.0.1:8000

# Database Configuration
DATABASE_URL=sqlite:///data/logs.db

# Logging Configuration
LOG_LEVEL=INFO
LOG_FILE=logs/securenet.log

# Slack Integration (Optional)
SLACK_BOT_TOKEN=xoxb-your-slack-bot-token
SLACK_CHANNEL=#alerts

# AWS Integration (Optional)
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_REGION=us-east-1

# Email alert config (for future use)
SMTP_SERVER=smtp.example.com
SMTP_PORT=587
EMAIL_USERNAME=your-email@example.com
EMAIL_PASSWORD=your-password
EMAIL_FROM=alerts@example.com
EMAIL_TO=security-team@example.com
EMAIL_SUBJECT=Security Alert
EMAIL_BODY=An alert has been triggered in SecureNet.
# EMAIL_USE_TLS=True
# EMAIL_USE_SSL=False
# EMAIL_TIMEOUT=10
# EMAIL_SSL_CERTFILE=/path/to/certfile
# EMAIL_SSL_KEYFILE=/path/to/keyfile
# EMAIL_SSL_CA_CERTS=/path/to/ca_certs

# Security Settings
CORS_ORIGINS=http://localhost:8000
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_PERIOD=60

# Service Configuration
INGESTION_BATCH_SIZE=100
INGESTION_INTERVAL=1
DETECTION_THRESHOLD=-0.5
DETECTION_INTERVAL=5
ALERT_INTERVAL=10